/*
===============================================================================
Magnitude Analysis
===============================================================================
Purpose:
    - To quantify data and group results by specific dimensions.
    - For understanding data distribution across categories.

SQL Functions Used:
    - SUM(), COUNT(), AVG()
    - GROUP BY, ORDER BY
===============================================================================
*/

--The total customers by countries
SELECT COUNT(customer_key) as total_customer ,country
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customer DESC


--The total customer by gender
SELECT COUNT(customer_key) as total_customer ,gender
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customer DESC


--The total products by category
SELECT COUNT(product_key) as total_products ,category
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC


--The average costs in each category
SELECT AVG(cost) as avg_cost ,category
FROM gold.dim_products
GROUP BY category
ORDER BY avg_cost DESC


--The toatal revenue generated for each category
SELECT SUM(sales_amount) as total_revenue ,category
FROM gold.fact_sales S LEFT JOIN gold.dim_products P
ON S.product_key =P.product_key
GROUP BY category 
ORDER BY total_revenue DESC


--The total revenue generated by each customer 
SELECT c.customer_key ,c.first_name ,c.last_name ,SUM(sales_amount) as total_revenue 
FROM gold.fact_sales S LEFT JOIN gold.dim_customers C
ON S.customer_key=C.customer_key
GROUP BY c.customer_key ,c.first_name ,c.last_name 
ORDER BY total_revenue DESC


--The distribution of sold items across countries
SELECT c.country ,count(quanity) as total_sold_items
FROM gold.fact_sales S LEFT JOIN gold.dim_customers C
ON S.customer_key=C.customer_key
GROUP BY c.country
ORDER BY total_sold_items DESC


--The top-selling months from Highest to lowest 
SELECT FORMAT(order_date, 'yyyy-MM') AS month, SUM(sales_amount) AS monthly_sales
FROM gold.fact_sales
GROUP BY FORMAT(order_date, 'yyyy-MM')
ORDER BY monthly_sales DESC
